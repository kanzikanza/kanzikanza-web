/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    id 'java-library'
    id 'maven-publish'
}

repositories {
    mavenLocal()
    maven {
        url = uri('https://repo.maven.apache.org/maven2/')
    }
}

dependencies {
    api libs.org.springframework.boot.spring.boot.starter.actuator
    api libs.javax.xml.bind.jaxb.api
    api libs.io.jsonwebtoken.jjwt.api
    api libs.com.auth0.java.jwt
    api libs.org.springframework.boot.spring.boot.starter.web
    api libs.org.springframework.boot.spring.boot.starter.data.jpa
    api libs.org.springframework.boot.spring.boot.starter.websocket
    api libs.org.springframework.boot.spring.boot.starter.security
    api libs.org.springframework.boot.spring.boot.starter.webflux
    api libs.com.google.code.gson.gson
    api libs.mysql.mysql.connector.java
    api 'org.springframework.boot:spring-boot-starter-data-neo4j:3.2.1'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.3.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.3.1'
    runtimeOnly libs.io.jsonwebtoken.jjwt.jackson
    runtimeOnly libs.io.jsonwebtoken.jjwt.impl
    testImplementation libs.org.springframework.boot.spring.boot.starter.test
    compileOnly libs.org.projectlombok.lombok
    annotationProcessor 'org.projectlombok:lombok:1.18.22'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.22'



    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-redis', version: '3.2.1'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-thymeleaf', version: '3.0.1'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
description = 'rest-service'



java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

publishing {
    publications {
        maven(MavenPublication) {
            from(components.java)
        }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
    options.compilerArgs << '-parameters'
}

tasks.withType(Javadoc) {
    options.encoding = 'UTF-8'
}

test {
//    include 'com/example/restservice/*Test.class'
    useJUnitPlatform()
}
